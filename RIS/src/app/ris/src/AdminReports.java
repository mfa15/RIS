/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.ris.src;

import app.ris.bo.Constants;
import app.ris.bo.JCheckCombo;
import app.ris.bo.LocationBO;
import app.ris.bo.PatientDetailReportBo;
import app.ris.bo.PatientSummaryReportBo;
import app.ris.bo.PatientTypeBo;
import app.ris.dam.dam;
import app.ris.reporting.PatientDetailReport;
import app.ris.reporting.PatientSummaryReport;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *

 */
public class AdminReports extends javax.swing.JInternalFrame  {
    dam dam = new dam();
    private JFrame jf = new JFrame();
    private JFrame jf2 = new JFrame();
    LinkedHashMap<String, String> lhm = new LinkedHashMap<>();
    Vector vecCheckBoxesPatient = new Vector();
    Vector vecCheckBoxesContrast = new Vector();
    JCheckCombo jcc2,jcc;
    LinkedHashMap<String,PatientTypeBo> patientTypeMap = new LinkedHashMap<String, PatientTypeBo>();
    LinkedHashMap<String,PatientDetailReportBo> patientDetailMap = new LinkedHashMap<String, PatientDetailReportBo>();
    LinkedHashMap<String,PatientSummaryReportBo> patientSummaryMap = new LinkedHashMap<String, PatientSummaryReportBo>();
   /**
     * Creates new form Reports
     */
    public AdminReports() {
        initComponents();
        this.setVisible(true);
        Dimension desktopSize = Constants.pane1.getSize();
        Dimension jInternalFrameSize = this.getSize();
        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2,
            (desktopSize.height- jInternalFrameSize.height)/2);
        
        
        jf.setLayout(new GridBagLayout());
        jf2.setLayout(new GridBagLayout());
        vecCheckBoxesContrast.add(new JCheckBox("With Contrast", true));
        vecCheckBoxesContrast.add(new JCheckBox("Without Contrast", true));
        jcc2 = new JCheckCombo(vecCheckBoxesContrast);
            jf2.getContentPane().add(jcc2);
            jPanel6.setLayout(new FlowLayout());
            jPanel6.add(jf2.getContentPane());

            dam.getPatientType(patientTypeMap);
        jcc2.getSelectedObjects();
        if(patientTypeMap.size()>0)
        {
            for(String key:patientTypeMap.keySet())
            {
                PatientTypeBo pbo = patientTypeMap.get(key);
                if(Constants.employeeRole.equalsIgnoreCase("P") && pbo.getDesc().equalsIgnoreCase("private"))
                    continue;
                vecCheckBoxesPatient.add(new JCheckBox(pbo.getDesc(), false));
            }
            
            jcc = new JCheckCombo(vecCheckBoxesPatient);
            jf.getContentPane().add(jcc);
            jPanel5.setLayout(new FlowLayout());
            jPanel5.add(jf.getContentPane());
            
            if (Constants.locationMap.size() > 0) {
                System.out.println("Role for current user is : " + Constants.employeeRole);
                if(Constants.employeeRole.toLowerCase().equalsIgnoreCase("U") || Constants.employeeRole.toLowerCase().equalsIgnoreCase("P")) {
                    new dam().getRoleWiseLocationRights(Constants.employeeRole);
                }
            for (String key : Constants.locationMap.keySet()) {
                LocationBO lb = Constants.locationMap.get(key);
                lhm.put(key, lb.getName());
                if (lb.getActive().equalsIgnoreCase("Y")) {
                    comboLoc.addItem(lhm.get(key).toString());
                }
            }
        }
            
        }
        
        
        
//        
//        JPanel j = new JPanel();
//                j.setLayout(new FlowLayout());
//                j.add(jf.getContentPane());
//                
                
//                this.add(jPanel4);
		this.pack();
		this.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        btnSummary = new javax.swing.JButton();
        btnDetails = new javax.swing.JButton();
        btnCl = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        fromDate = new com.toedter.calendar.JDateChooser();
        toDate = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        comboLoc = new javax.swing.JComboBox<>();

        setMaximizable(true);
        setResizable(true);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel21.setText("Admin Reports");

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setText("Exit");
        btnExit.setActionCommand("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSummary.setText("Summary");
        btnSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSummaryActionPerformed(evt);
            }
        });

        btnDetails.setText("Details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        btnCl.setText("Clear");
        btnCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnSummary)
                    .addComponent(btnDetails)
                    .addComponent(btnCl))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("From Date");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("To Date");

        fromDate.setDateFormatString("yyyy-MM-dd");

        toDate.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addGap(3, 3, 3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Patient Types");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Contrast");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Location");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGap(13, 13, 13)
                .addComponent(comboLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();

    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSummaryActionPerformed

        String from="",to="";
        try{
            SimpleDateFormat simpledatafo = new SimpleDateFormat("yyyy-MM-dd");
            from= simpledatafo.format(this.fromDate.getDate());
            to = simpledatafo.format(this.toDate.getDate());
        }catch(java.lang.NullPointerException e)
        {
            JOptionPane.showMessageDialog(this, "Missing Date(s). Kindly Provide Correct Date");
            return;
        }
        if(jcc2.contrast.length()>0 )
        {
            if(jcc2.contrast.substring(jcc2.contrast.length()-1, jcc2.contrast.length()).equalsIgnoreCase(","))
                jcc2.contrast =jcc2.contrast.substring(0, jcc2.contrast.length()-1);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please Select Contrast Value");
            return;
        }
        if(jcc.patientType.length()>0 )
        {
            if(jcc.patientType.substring(jcc.patientType.length()-1, jcc.patientType.length()).equalsIgnoreCase(","))
            jcc.patientType = jcc.patientType.substring(0,jcc.patientType.length()-1);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please Select at least one Patient Type");
            return;
        }
        
        jcc2.contrast = jcc2.contrast.replace("With Contrast", "'Y'");
        jcc2.contrast = jcc2.contrast.replace("Without Contrast", "'N',''");
        
        for(String key: patientTypeMap.keySet())
        {
            PatientTypeBo pbo = patientTypeMap.get(key);
            jcc.patientType = jcc.patientType.replace(pbo.getDesc(), "'"+pbo.getId()+"'");
        }
        String locationId="";
        for(String key : lhm.keySet())
        {
            if(lhm.get(key).equalsIgnoreCase(comboLoc.getSelectedItem().toString()))
            {
                locationId=key;
                break;
            }
        }
        System.out.println(locationId+"\n"+jcc.patientType+"\n"+jcc2.contrast);
        patientSummaryMap.clear();
        dam.getPatientSummary( from, to,locationId,jcc.patientType,jcc2.contrast,patientSummaryMap);
        
        if(patientSummaryMap.size()>0)
        {
            PatientSummaryReport report = new PatientSummaryReport();
            String path = report.generateOrder(comboLoc.getSelectedItem().toString(),from,to,patientSummaryMap);
            if(!path.equals(""))
            {
                try {
                    File pdf = new File(path);
                    Desktop.getDesktop().open(pdf);
                } catch (IOException ex) {
                    Logger.getLogger(OrderEntryMultipleCpts.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No Record Found");
        }
    }//GEN-LAST:event_btnSummaryActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        String from="",to="";
        try{
            SimpleDateFormat simpledatafo = new SimpleDateFormat("yyyy-MM-dd");
            from= simpledatafo.format(this.fromDate.getDate());
            to = simpledatafo.format(this.toDate.getDate());
        }catch(java.lang.NullPointerException e)
        {
            JOptionPane.showMessageDialog(this, "Missing Date(s). Kindly Provide Correct Date");
            return;
        }
        if(jcc2.contrast.length()>0 )
        {
            if(jcc2.contrast.substring(jcc2.contrast.length()-1, jcc2.contrast.length()).equalsIgnoreCase(","))
                jcc2.contrast =jcc2.contrast.substring(0, jcc2.contrast.length()-1);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please Select Contrast Value");
            return;
        }
        if(jcc.patientType.length()>0 )
        {
            if(jcc.patientType.substring(jcc.patientType.length()-1, jcc.patientType.length()).equalsIgnoreCase(","))
            jcc.patientType = jcc.patientType.substring(0,jcc.patientType.length()-1);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please Select at least one Patient Type");
            return;
        }
        
        jcc2.contrast = jcc2.contrast.replace("With Contrast", "'Y'");
        jcc2.contrast = jcc2.contrast.replace("Without Contrast", "'N',''");
        
        for(String key: patientTypeMap.keySet())
        {
            PatientTypeBo pbo = patientTypeMap.get(key);
            jcc.patientType = jcc.patientType.replace(pbo.getDesc(), "'"+pbo.getId()+"'");
        }
        String locationId="";
        for(String key : lhm.keySet())
        {
            if(lhm.get(key).equalsIgnoreCase(comboLoc.getSelectedItem().toString()))
            {
                locationId=key;
                break;
            }
        }
        System.out.println(locationId+"\n"+jcc.patientType+"\n"+jcc2.contrast);
        patientSummaryMap.clear();
        patientDetailMap.clear();
        dam.getPatientSummary(from, to,locationId,jcc.patientType,jcc2.contrast,patientSummaryMap);
        dam.getPatientDetails(from, to,locationId,jcc.patientType,jcc2.contrast,patientDetailMap);
        
        if(patientSummaryMap.size()>0)
        {
            PatientDetailReport report = new PatientDetailReport();
            String path = report.generateOrder(comboLoc.getSelectedItem().toString(),from,to,patientSummaryMap,patientDetailMap);
            if(!path.equals(""))
            {
                try {
                    File pdf = new File(path);
                    Desktop.getDesktop().open(pdf);
                } catch (IOException ex) {
                    Logger.getLogger(OrderEntryMultipleCpts.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No Record Found");
        }
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClActionPerformed
        toDate.setDate(new Date());
        fromDate.setDate(new Date());
        
    }//GEN-LAST:event_btnClActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCl;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSummary;
    private javax.swing.JComboBox<String> comboLoc;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private com.toedter.calendar.JDateChooser toDate;
    // End of variables declaration//GEN-END:variables

    
}
